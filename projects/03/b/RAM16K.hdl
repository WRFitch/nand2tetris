// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    DMux4Way12(in=address[2..13], sel=address[0..1], a=sel0, b=sel1, c=sel2, d=sel3);
    
    DMux4Way(in=load, sel=address[0..1], a=load0, b=load1, c=load2, d=load3);
    
    RAM4K(in=in, load=load0, address=sel0, out=bank0);
    RAM4K(in=in, load=load1, address=sel1, out=bank1);
    RAM4K(in=in, load=load2, address=sel2, out=bank2);
    RAM4K(in=in, load=load3, address=sel3, out=bank3);
    
    Mux4Way16(a=bank0, b=bank1, c=bank2, d=bank3, sel=address[0..1], out=out);
}
